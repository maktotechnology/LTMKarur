@model IEnumerable<LTMKarur.Models.Certification>

@{
    Layout = "_Layout";
    ViewData["Title"] = "Certification Masters";
}

<h4 class="mb-3">Certification Masters</h4>

<div class="d-flex gap-2 mb-3">
    <input type="text" id="newCertName" class="form-control w-50" placeholder="Enter Certification Name" />
    <button class="btn btn-primary" id="addCertBtn">Add</button>
</div>

<table class="table table-bordered table-striped align-middle" id="certTable">
    <thead class="table-light">
        <tr>
            <th style="width:70%">Certification Name</th>
            <th class="text-center" style="width:30%">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr data-id="@item.Id">
                <td contenteditable="true" class="editable">@item.Name</td>
                <td class="text-center">
                    <button class="btn btn-success btn-sm saveBtn">Save</button>
                    <button class="btn btn-danger btn-sm deleteBtn">Delete</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script>
        // Add New Certification
        document.getElementById('addCertBtn').addEventListener('click', async () => {
            const name = document.getElementById('newCertName').value.trim();
            if (!name) return alert("Please enter a certification name.");
            const response = await fetch('/Certification/Create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ name })
            });
            if (response.ok) location.reload();
        });

        // Save Existing Certification
        document.querySelectorAll('.saveBtn').forEach(btn => {
            btn.addEventListener('click', async (e) => {
                const row = e.target.closest('tr');
                const id = row.dataset.id;
                const name = row.querySelector('.editable').innerText.trim();
                if (!name) return alert("Certification name cannot be empty.");

                const response = await fetch('/Certification/Update', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id, name })
                });
                if (response.ok) alert("âœ… Saved successfully");
            });
        });

        // Delete Certification
        document.querySelectorAll('.deleteBtn').forEach(btn => {
            btn.addEventListener('click', async (e) => {
                if (!confirm("Are you sure you want to delete this certification?")) return;
                const row = e.target.closest('tr');
                const id = row.dataset.id;
                const response = await fetch('/Certification/Delete', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ id })
                });
                if (response.ok) row.remove();
            });
        });
    </script>
}
